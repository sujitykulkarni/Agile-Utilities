{"version":3,"sources":["redux/reducers/settings.ts","redux/reducers/index.ts","redux/actions/actionTypes.ts","redux/store.ts","components/navbar.tsx","components/jira-time-calc/settings.tsx","redux/actions/actions.ts","components/jira-time-calc/timeInput.tsx","components/jira-time-calc/timeOutput.tsx","components/jira-time-calc/calculator.tsx","components/jira-time-calc/jira-time-calculator.tsx","components/rough-estimator/roughEstimator.tsx","routing/router.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["initialState","manHours","hours","minutes","enableManHours","combineReducers","settings","state","arguments","length","undefined","action","type","payload","Object","objectSpread","createStore","rootReducer","window","__REDUX_DEVTOOLS_EXTENSION__","Navbar","_React$Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","key","value","react_default","a","createElement","className","react_router_dom","to","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","index_es","icon","faHourglass","faStopwatch","React","Component","Settings","props","_this","call","handleHoursChange","event","setState","target","handleMinutesChange","toggleManHours","saveSettings","_this$state","setManHours","_this$state2","concat","show","onClick","onClose","faTimes","onChange","checked","htmlFor","min","max","step","disabled","connect","_state$settings","dispatch","flag","TimeInput","getRows","inputs","map","input","index","days","handleInputChange","data-key","data-type","onKeyDown","handleKeyDown","removeRow","faTrashAlt","e","_this$state$inputs","keyCode","addRow","onCalculate","toConsumableArray","push","currentTarget","dataset","console","log","splice","parseInt","forEach","toString","reset","onReset","Fragment","colSpan","faPlus","faUndo","TimeOutput","_this$props$output","output","asManHours","faClock","defaultOutput","Calculator","handleCalculate","stripChars","reduce","getTotalTime","sanitizeTime","replace","acc","cur","totalDays","totalHours","totalMinutes","_this$props","_hours$minutes","maxMinutes","tempManHours","tempHours","Math","abs","assign","handleOnReset","timeOutput_TimeOutput","timeInput_TimeInput","JiraTimeCalculator","toggleSettings","showSettings","faCogs","calculator","jira_time_calc_settings","RoughEstimator","AppRouter","navbar_Navbar","react_router","path","component","App","router_AppRouter","Boolean","location","hostname","match","ReactDOM","render","es","store","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.bf6ba583.chunk.js","sourcesContent":["import { SET_MAN_HOURS, TOGGLE_MAN_HOURS } from 'redux/actions/actionTypes';\r\ninterface IAction {\r\n    type: string;\r\n    payload: any;\r\n} \r\nconst initialState = {\r\n    manHours: {\r\n        hours: 7,\r\n        minutes: 30,\r\n    },\r\n    enableManHours: true,\r\n}\r\n\r\nexport default (state = initialState, action: IAction) => {\r\n    switch(action.type) {\r\n        case SET_MAN_HOURS: {\r\n            const manHours = action.payload;\r\n            return {\r\n                ...state,\r\n                manHours,\r\n            }\r\n        }\r\n\r\n        case TOGGLE_MAN_HOURS: {\r\n            return {\r\n                ...state,\r\n                enableManHours: action.payload,\r\n            }\r\n        }\r\n\r\n        default:\r\n            return state;\r\n    }\r\n}","import { combineReducers } from 'redux';\r\nimport settings from './settings';\r\nexport default combineReducers({\r\n    settings,\r\n});","export const SET_MAN_HOURS = 'SET_MAN_HOURS';\r\nexport const TOGGLE_MAN_HOURS = 'TOGGLE_MAN_HOURS';","import { createStore } from \"redux\";\r\nimport rootReducer from \"./reducers\";\r\n\r\nexport default createStore(\r\n    rootReducer, \r\n    (window as any).__REDUX_DEVTOOLS_EXTENSION__ && (window as any).__REDUX_DEVTOOLS_EXTENSION__()\r\n);","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faHourglass, faStopwatch } from '@fortawesome/free-solid-svg-icons';\r\n\r\nexport class Navbar extends React.Component {\r\n    render() {\r\n        return (\r\n            <nav className=\"navbar navbar-expand-lg navbar-light bg-light\">\r\n                <Link className=\"navbar-brand\" to=\"/\">Agile Utilities</Link>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n                    <ul className=\"navbar-nav\">\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/jira-time-calculator/\">\r\n                                <FontAwesomeIcon icon={faHourglass} /> JIRA Time Calculator \r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item\">\r\n                            <Link className=\"nav-link\" to=\"/rough-estimator/\">\r\n                            <FontAwesomeIcon icon={faStopwatch} /> Rough Estimator\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                </div>\r\n            </nav>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { Dispatch } from 'redux';\r\nimport { IStore, ManHours } from 'redux/IStore';\r\nimport { setManHours, toggleManHours } from 'redux/actions/actions';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\n\r\ninterface IProps {\r\n    show: boolean;\r\n    onClose(): void;\r\n}\r\n\r\ninterface IStateProps {\r\n    manHours: ManHours;\r\n    enableManHours: boolean;\r\n}\r\ninterface IState extends ManHours { \r\n    enableManHours: boolean;\r\n}\r\n\r\ninterface IDispatchProps {\r\n    setManHours(manHours: ManHours): void;\r\n    toggleManHours(flag: boolean): void;\r\n}\r\nconst mapStateToProps = () => {\r\n    return (state: IStore): IStateProps => {\r\n        const { settings: { manHours, enableManHours } } = state;\r\n        return {\r\n            manHours,\r\n            enableManHours,\r\n        }\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch: Dispatch) => {\r\n    return {\r\n        setManHours: (manHours: ManHours) => dispatch(setManHours(manHours)),\r\n        toggleManHours: (flag: boolean) => dispatch(toggleManHours(flag)),\r\n    }\r\n}\r\nclass Settings extends React.Component<IProps & IStateProps & IDispatchProps, IState> {\r\n    constructor(props: IProps & IStateProps & IDispatchProps) {\r\n        super(props);\r\n        this.state = {\r\n            hours: 7,\r\n            minutes: 30,\r\n            enableManHours: props.enableManHours,\r\n        }\r\n    }\r\n    render() {\r\n        const { hours, minutes, enableManHours } = this.state;\r\n        return (\r\n            <div className={`bg-dark text-light col-4 py-5 border-bottom settings settings--${this.props.show ? 'show' : 'hide'}`}>\r\n                <div className=\"col-12\">\r\n                    <div className=\"row justify-content-between\">\r\n                        <div className=\"col-3\">\r\n                            <h2>\r\n                                Settings\r\n                            </h2>\r\n                        </div>\r\n                        <div className=\"col-2 align-self-center\">\r\n                            <button className=\"btn btn-block btn-dark\" onClick={this.props.onClose}><FontAwesomeIcon icon={faTimes}/></button>\r\n                        </div>\r\n                    </div>\r\n                    <form action=\"\" className=\"row mt-4\">\r\n                        <h5 className=\"col-12\">Man Hour Settings</h5>\r\n                        <div className=\"form-group form-check col-12\">\r\n                            <input type=\"checkbox\" className=\"form-check-input\" id=\"enableManHours\" onChange={this.toggleManHours} checked={enableManHours}/>\r\n                            <label htmlFor=\"enableManHours\">Enable Man Hours</label>\r\n                        </div>\r\n                        <h6 className=\"col-12\">Change values for man hours</h6>\r\n                        <div className=\"form-group col align-self-center\">\r\n                            <label htmlFor=\"hoursControlRange\">{hours} Hours</label>\r\n                            <input type=\"range\" className=\"form-control-range\" id=\"hoursControlRange\" \r\n                                min=\"0\" max=\"24\" step=\"1\" value={hours} onChange={this.handleHoursChange} \r\n                                disabled={!enableManHours}/>\r\n                        </div>\r\n                        <div className=\"form-group col align-self-center\">\r\n                            <label htmlFor=\"minuteControlRange\">{minutes} Minutes</label>\r\n                            <input type=\"range\" className=\"form-control-range\" id=\"minuteControlRange\" \r\n                                min=\"0\" max=\"60\" step=\"5\" value={minutes} onChange={this.handleMinutesChange} \r\n                                disabled={!enableManHours}/>\r\n                        </div>\r\n                        <footer className=\"col btn-group align-self-center\">\r\n                            <button type=\"button\" className=\"btn btn-primary\" onClick={this.saveSettings}>Save</button>\r\n                            <button type=\"button\" className=\"btn btn-secondary\">Reset</button>\r\n                        </footer>\r\n                    </form>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private handleHoursChange = (event: any) => {\r\n        this.setState({\r\n            hours: event.target.value,\r\n        });\r\n    }\r\n\r\n    private handleMinutesChange = (event: any) => {\r\n        this.setState({\r\n            minutes: event.target.value,\r\n        });\r\n    }\r\n\r\n    private toggleManHours = () => {\r\n        const { enableManHours } = this.state;\r\n        this.setState({\r\n            enableManHours: !enableManHours,\r\n        });\r\n    }\r\n\r\n    private saveSettings = () => {\r\n        const { hours, minutes, enableManHours } = this.state;\r\n        const manHours = { hours, minutes };\r\n        this.props.setManHours(manHours);\r\n        this.props.toggleManHours(enableManHours);\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Settings);\r\n","import * as ACTIONS from './actionTypes';\r\nexport const setManHours = (manHours: {hours: number, minutes: number}) => ({\r\n    type: ACTIONS.SET_MAN_HOURS,\r\n    payload: manHours,\r\n});\r\n\r\nexport const toggleManHours = (flag: boolean) => ({\r\n    type: ACTIONS.TOGGLE_MAN_HOURS,\r\n    payload: flag,\r\n})","import React from 'react';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPlus, faUndo, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\r\n\r\ninterface IProps {\r\n    onCalculate(inputs: IInput[]): void;\r\n    onReset(): void;\r\n}\r\ninterface IState {\r\n    inputs: IInput[];\r\n}\r\n\r\nexport interface IInput {\r\n    days: string;\r\n    hours: string;\r\n    minutes: string;\r\n    [key: string]: string;\r\n}\r\n\r\nexport class TimeInput extends React.Component<IProps, IState> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = { \r\n            inputs: [\r\n                {\r\n                    days: '',\r\n                    hours: '',\r\n                    minutes: '',\r\n                },\r\n            ], \r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <React.Fragment>\r\n                <table className=\"table table-borderless\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th>Days</th>\r\n                            <th>Hours</th>\r\n                            <th>Minutes</th>\r\n                            <th></th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {this.getRows()}\r\n                    </tbody>\r\n                    <tfoot>\r\n                        <tr>\r\n                            <td colSpan={2}>\r\n                                <button onClick={this.addRow} className=\"btn btn-primary btn-lg btn-block\">\r\n                                    <FontAwesomeIcon icon={faPlus}/>\r\n                                </button>\r\n                            </td>\r\n                            <td colSpan={1}>\r\n                                <button onClick={this.reset} className=\"btn btn-lg btn-secondary btn-block\">\r\n                                <FontAwesomeIcon icon={faUndo}/>\r\n                                </button>\r\n                            </td>\r\n                        </tr>\r\n                    </tfoot>\r\n                </table>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n\r\n    private getRows = () => {\r\n        const { inputs } = this.state;\r\n        return inputs.map((input: IInput, index: number) => {\r\n            return (\r\n                <tr key={index}>\r\n                    <td><input type=\"number\" value={input.days} onChange={this.handleInputChange} data-key={index} data-type=\"days\" onKeyDown={this.handleKeyDown} className=\"form-control form-control-lg\" /></td>\r\n                    <td><input type=\"number\" value={input.hours} onChange={this.handleInputChange} data-key={index} data-type=\"hours\" onKeyDown={this.handleKeyDown} className=\"form-control form-control-lg\" /></td>\r\n                    <td><input type=\"number\" value={input.minutes} onChange={this.handleInputChange} data-key={index} data-type=\"minutes\" onKeyDown={this.handleKeyDown} className=\"form-control form-control-lg\" /></td>\r\n                    <td>\r\n                        <button onClick={this.removeRow} data-key={index} disabled={(inputs.length === 1) ? true : false} className=\"btn btn-lg btn-block btn-light\">\r\n                            <FontAwesomeIcon icon={faTrashAlt}/>\r\n                        </button>\r\n                    </td>\r\n                </tr>\r\n            );\r\n        });\r\n    }\r\n\r\n    private handleKeyDown = (e: React.KeyboardEvent) => {\r\n        const { length } = this.state.inputs;\r\n        const { days, hours, minutes } = this.state.inputs[length-1];\r\n        if ((e.keyCode === 13) && (days || hours || minutes)) {\r\n            this.addRow();\r\n        }\r\n    }\r\n\r\n    private addRow = () => {\r\n        this.props.onCalculate(this.state.inputs);\r\n        const defaultInput: IInput = {\r\n            days: '',\r\n            hours: '',\r\n            minutes: '',\r\n        };\r\n        let inputs = [...this.state.inputs];\r\n        inputs.push(defaultInput);\r\n        this.setState({\r\n            inputs\r\n        });\r\n    }\r\n\r\n    private removeRow = (event: React.MouseEvent<HTMLElement>) => {\r\n        let inputs = this.state.inputs;\r\n        const key = event.currentTarget.dataset.key;\r\n        console.log(key);      \r\n        if(inputs.length > 1 && key){\r\n            inputs.splice(parseInt(key), 1);\r\n        }\r\n        this.setState({\r\n            inputs,\r\n        });\r\n        this.props.onCalculate(this.state.inputs);\r\n    }\r\n\r\n    private handleInputChange = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n        let inputs: IInput[] = this.state.inputs;\r\n        const key = event.target.dataset.key;\r\n        const type = event.target.dataset.type;\r\n        inputs.forEach((input, index) => {\r\n            if((index.toString() === key) && type){\r\n                input[type] = event.target.value;\r\n            }\r\n        });\r\n        this.setState({\r\n            inputs,\r\n        });\r\n        return null;\r\n    }\r\n\r\n    private reset = () => {\r\n        const defaultInput: IInput = {\r\n            days: '',\r\n            hours: '',\r\n            minutes: '',\r\n        };\r\n        this.setState({\r\n            inputs: [defaultInput],\r\n        });\r\n        this.props.onReset();\r\n    }\r\n}","import React from 'react';\r\nimport { IInput } from './timeInput';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faClock } from '@fortawesome/free-solid-svg-icons';\r\n\r\ninterface IProps {\r\n    output: IInput;\r\n    asManHours: boolean;\r\n}\r\nexport class TimeOutput extends React.Component<IProps, {}> {\r\n    render() {\r\n        const { days, hours, minutes } = this.props.output;\r\n        return (\r\n            <div className=\"card\">\r\n                <div className=\"card-header\">\r\n                    Total time\r\n                </div>\r\n                <div className=\"card-body\">\r\n                    {\r\n                        this.props.asManHours ?\r\n                        <span className=\"badge badge-pill badge-primary\"><FontAwesomeIcon icon={faClock} /> man hours</span>\r\n                        : null\r\n                    }\r\n                    <h5 className=\"text-primary\">{`${days} ${hours} ${minutes}`}</h5>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { TimeInput, IInput } from 'components/jira-time-calc/timeInput';\r\nimport { TimeOutput } from 'components/jira-time-calc/timeOutput';\r\nimport { IStore, ManHours } from 'redux/IStore';\r\n\r\ninterface  IProps {}\r\n\r\ninterface IState {\r\n    output: IInput;\r\n}\r\n\r\ninterface IStateProps {\r\n    manHours?: ManHours;\r\n    enableManHours: boolean;\r\n}\r\n\r\nconst defaultOutput: IInput = {\r\n    days: '0 days',\r\n    hours: '0 hours',\r\n    minutes: '0 minutes',\r\n};\r\n\r\nconst mapStateToProps = () => {\r\n    return (state: IStore): IStateProps => {\r\n        const { settings: {manHours, enableManHours} } = state;\r\n        return {\r\n            manHours,\r\n            enableManHours,\r\n        }\r\n    }\r\n}\r\n\r\n/**\r\n * A parent component that hosts time input and output\r\n *\r\n * @export\r\n * @class Calculator\r\n * @extends {React.Component<{}, IState>}\r\n */\r\nclass Calculator extends React.Component<IProps & IStateProps, IState> {\r\n    constructor(props: IProps & IStateProps) {\r\n        super(props);\r\n        this.state = {\r\n            output: Object.assign({}, defaultOutput),\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <section className=\"calculator row\">\r\n                <div className=\"col mb-4 align-self-end\">\r\n                    <TimeOutput output={this.state.output} asManHours={this.props.manHours ? true : false}/>\r\n                </div>\r\n                <div className=\"col-9\">\r\n                    <TimeInput onCalculate={this.handleCalculate} onReset={this.handleOnReset}/>\r\n                </div>\r\n            </section>\r\n        )\r\n    };\r\n\r\n    private handleCalculate = (inputs: IInput[]) => {\r\n        const days = inputs.map(input => this.stripChars(input.days)).reduce(this.getTotalTime, 0);\r\n        const hours = inputs.map(input => this.stripChars(input.hours)).reduce(this.getTotalTime, 0);\r\n        const minutes = inputs.map(input => this.stripChars(input.minutes)).reduce(this.getTotalTime, 0);\r\n        this.sanitizeTime(days, hours, minutes);\r\n    }\r\n\r\n    private stripChars = (value: string): number => {\r\n        const pattern = /\\D/g;\r\n        if (value) {\r\n            return parseInt(value.replace(pattern, ''));\r\n        }\r\n        return 0;\r\n    }\r\n\r\n    private getTotalTime = (acc: number, cur: number) => acc + cur;\r\n\r\n    private sanitizeTime = (days: number, hours: number, minutes: number) => {\r\n        let totalDays = days;\r\n        let totalHours = hours;\r\n        let totalMinutes = minutes;\r\n        const { enableManHours, manHours } = this.props; \r\n        const { hours: maxHours, minutes: maxMinutes } = {hours: 24, minutes: 60};\r\n        if (minutes >= maxMinutes) {\r\n            totalHours += ~~(minutes / maxMinutes);\r\n            totalMinutes = (minutes % maxMinutes);\r\n        }\r\n        if (totalHours >= maxHours) {\r\n            totalDays += ~~(totalHours / maxHours);\r\n            totalHours = (totalHours % maxHours);\r\n        }\r\n        if(enableManHours && manHours) {\r\n            const tempManHours = manHours.hours + (manHours.minutes / maxMinutes);\r\n            const tempHours = (totalDays * 24) + totalHours + (totalMinutes / maxMinutes);\r\n            totalDays = ~~(tempHours / tempManHours);\r\n            totalHours = ~~(tempHours % tempManHours);\r\n            totalMinutes = Math.abs(totalHours - (tempHours % tempManHours)) * 60;\r\n        }\r\n        const output = Object.assign(this.state.output, {\r\n            days: `${totalDays} days`,\r\n            hours: `${totalHours} hours`,\r\n            minutes: `${totalMinutes} minutes`,\r\n        });\r\n        this.setState({\r\n            output,\r\n        });\r\n    }\r\n\r\n    private handleOnReset = () => {\r\n        this.setState({\r\n            output: defaultOutput,\r\n        });\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps)(Calculator);","import React from 'react';\r\nimport { Calculator, Settings } from 'components';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCogs } from '@fortawesome/free-solid-svg-icons';\r\n\r\ninterface IProps { }\r\n\r\ninterface IState {\r\n    showSettings: boolean;\r\n}\r\n\r\nexport class JiraTimeCalculator extends React.Component<IProps, IState> {\r\n    constructor(props: IProps) {\r\n        super(props);\r\n        this.state = {\r\n            showSettings: false,\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <section>\r\n                    <header className=\"App__header row justify-content-center my-3\">\r\n                        <div className=\"col-9 bg-white\">\r\n                            <h1>JIRA Time Calculator</h1>\r\n                            <p>A utility to calculate time using the day, hour, minute analogy of JIRA.</p>\r\n                        </div>\r\n                        <nav className=\"App__nav bg-white col-1 align-self-center\">\r\n                            <ul>\r\n                                <li>\r\n                                    <button onClick={this.toggleSettings} className=\"btn btn-lg btn-block btn-outline-info\"><FontAwesomeIcon icon={faCogs} /></button>\r\n                                </li>\r\n                            </ul>\r\n                        </nav>\r\n                    </header>\r\n                    <div className=\"row justify-content-center\">\r\n                        <div className=\"col\">\r\n                            <Calculator />\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <Settings show={this.state.showSettings} onClose={this.toggleSettings} />\r\n            </div>\r\n        )\r\n    }\r\n\r\n    private toggleSettings = () => {\r\n        const { showSettings } = this.state;\r\n        this.setState({\r\n            showSettings: !showSettings,\r\n        });\r\n    }\r\n}","import React from 'react';\r\n\r\nexport class RoughEstimator extends React.Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row justify-content-center\">\r\n                    <div className=\"col align-self-center\">\r\n                        <h1 className=\"text-center\">Coming soon.</h1>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\r\nimport { BrowserRouter as Router, Route } from 'react-router-dom';\r\nimport { Navbar, JiraTimeCalculator, RoughEstimator } from 'components';\r\nexport class AppRouter extends React.Component {\r\n    render() {\r\n        return (\r\n            <Router>\r\n                <Navbar />\r\n                <Route path=\"/jira-time-calculator\" component={JiraTimeCalculator} />\r\n                <Route path=\"/rough-estimator\" component={RoughEstimator} />\r\n            </Router>\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\nimport { AppRouter } from 'routing/router';\nimport './App.scss';\n\nclass App extends React.Component {\n    render() {\n        return (\n            <div className=\"App\">\n                <AppRouter />\n            </div>\n        );\n    }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nconst Root = () => (\n    <Provider store={store}>\n      <App />\n    </Provider>\n  );\n\nReactDOM.render(<Root />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}